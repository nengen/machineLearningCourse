print("Hello");
print("Hello World");
s<-"4";
v<-4;
a<-log(sqrt(exp(36)))
a<-log(sqrt(exp(36)))
a<-log(sqrt(exp(36)));
a<-log(sqrt(exp(36)));
print(a);
print(a);
print(d);
d <- substr(c,4,12);
c <- "to be or not be is a question";
d <- substr(c,4,12);
print(d);
a <- log(sqrt(exp(36)), 10);
print(a);
round(a, 2);
c <- "to be or not to be is a question";
d <- substr(c,4,12);
print(d);
x <- seq(1,10,1);
print(x);
x[4] <- 9;
print(x);
sanviksveien 49b
#
sanviksveien 49b
#
new<-affair[affair$age>=32,]
new <- affair[affair$age>=32,]
new <- affair[affair$age>=32,];
head(myData);
print(head);
print(str);
head(myData);
new <- myData [affair$age>=32,];
head(myData);
new <- myData [myData$age>=32,];
head(myData);
str(myData);
require(foreign);
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
new <- myData [myData$age>=32,];
head(myData);
require(foreign);
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
new <- myData [myData$age>=32,];
head(myData);
str(myData);
colmean(myData);
colMeans(myData);
summary(myData);
Quantile(myData,0.75);
quantile(myData,0.75);
quantile(myData,0.75);
summary(myData);
Quantile(myData,0.75);
Quantile(new,0.75);
Quantile(myData$age,0.75);
quantile(myData$age,0.75);
save(myData, file=wood.Rdata);
save(myData, file = wood.Rdata);
save(myData, file = wood.RData);
quantile(myData$age,0.75);
save(myData, file = wood.RData);
save(myData,file=wood.RData);
save(myData,file="wood.RData");
curve(x^2,-2,2);
curve(x^2,-2,2);
curve(x^2,-2,2);
x <- c(1,3,4,7,8,9);
y <- c(0,3,6,9,7,8);
plot(x,y,);
plot(x,y,type="l");
plot(x,y,type="l");
curve(x^2,-2,2, add=TRUE);
curve(x^3,-2,2, add=TRUE);
curve(x^4,-2,2, add=TRUE);
curve(x^2,-2,2);
x <- c(1,3,4,7,8,9);
y <- c(0,3,6,9,7,8);
#plot(x,y,type="l");
curve(x^2,-2,2, add=TRUE);
curve(x^3,-2,2, add=TRUE);
curve(x^4,-2,2, add=TRUE);
require(foreign);
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
kids <- myData(myData$kids, labels = c("no", "yes"));
tables(kids);
require(foreign);
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
kids <- myData(myData$kids, labels = c("no", "yes"));
require(foreign);
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
kids <- myData(myData$kids, labels = c("no", "yes"));
require(foreign);
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
kids <- factor(myData$kids, labels = c("no", "yes"));
marriageLabel <- c("Very Unhappy", "Unhappy", "Average", "Happy", "Very Happy");
marriageRating <- factor(myData$ratemarr, labels = marriageLabel);
tables(kids);
table(kids);
prop.table(table(marriageRating));
prop.table(kids, marriageRating);
table(kids, marriageRating);
pie(table(kids,marriageRating));
barplot(table(kids, marriageRating));
summary(dat);
require(foreign);
dat = read.csv("/Users/Nengen/Downloads/STATOIL.csv", header = TRUE);
summary(dat);
hist(dat);
hist(dat$Volume);
plot(density(dat$Volume));
plot(cdf(dat$Volume));
plot(ecdf(dat$Volume));
boxplot(dat$Open);
cor(dat$Volume, dat$Open);
cov(dat$Volume, dat$Open);
str(dat);
str(dat$Date);
str(dat$Adj.Close);
summary(dat);
hist(dat$Volume);
summary(dat);
hist(dat$Volume);
plot(density(dat$Volume));
plot(ecdf(dat$Volume));
boxplot(dat$Open);
cor(dat$Volume, dat$Open);
cov(dat$Volume, dat$Open);
summary(dat);
a<-rbinom(100,1000,0.01)
b<-rbinom(100,1000,0.5)
head(a)
ybar<-mean(a)
n<-length(a)
#import
require(foreign);
#get the data and assign it to variable myData
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
#load package foreign
require(foreign);
#get the data and assign it to variable myData
myData <- read.dta("http://fmwww.bc.edu/ec-p/data/wooldridge/affairs.dta");
#use the factor function to add labels to the kids variable of myData
kids <- factor(myData$kids, labels = c("no", "yes"));
#make a vector containing the different states of happines
marriageLabel <- c("Very Unhappy", "Unhappy", "Average", "Happy", "Very Happy");
#add the labels to the ratemarr variable of myData
marriageRating <- factor(myData$ratemarr, labels = marriageLabel);
#
table(kids);
#
prop.table(table(marriageRating));
#make
table(kids, marriageRating);
#
pie(table(kids,marriageRating));
#same but now using a bar plot
barplot(table(kids, marriageRating));
x <- seq(0,10,by = 1);
#probability density function at each point
fx <- dbinom(x,10,0.5);
#plot the function using x as the points,
plot(x,fx, type = "h");
#cumulative probability
y <- pbinom(x,10,0.5);
plot(y);
plot(y, type= "l");
c <- seq(-2,2, by = 0.1);
#probability distribution, normal dist
normalD <- dnorm(c,mean = 0,sd = 1);
plot(normalD);
#cumulative probability distribution, normal dist
normalDCDF <- pnorm(c,mean = 0,sd = 1);
plot(normalDCDF);
#cdf of 1 in normal dist
print(pnorm(1, mean = 0, sd = 1));
z <- qnorm(0.975, mean = 0, sd = 1);
print(z);
#simulate throwing a one sided coin 1000 times
a<-rbinom(100,1000,0.01)
b<-rbinom(100,1000,0.5)
head(a)
setwd("~/Desktop/Programming/machineLearningCourse/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# Importing the dataset
dataset = read.csv('Data.csv')
View(dataset)
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
